{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/common/nav-link.tsx"],"sourcesContent":["'use client'\r\nimport { cn } from \"@/lib/utils\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nexport default function NavLink({\r\n    href,\r\n    children,\r\n    className,\r\n}: {\r\n    href:string;\r\n    children: React.ReactNode;\r\n    className?: string;\r\n}){\r\n    const pathname = usePathname();\r\n    const isActive = pathname === href || pathname.startsWith(href);\r\n    return <Link href={href} className={cn(\"transition-colors text-sm duration-200 text-gray-600 hover:text-green-500\",\r\n        className,\r\n        isActive && 'text-green-500')}\r\n    >{children}</Link>\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAIe,SAAS,QAAQ,EAC5B,IAAI,EACJ,QAAQ,EACR,SAAS,EAKZ;IACG,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,WAAW,aAAa,QAAQ,SAAS,UAAU,CAAC;IAC1D,qBAAO,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM;QAAM,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6EACnC,WACA,YAAY;kBACd;;;;;;AACN","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///E:/Project%20That%20I%20Can%20Done%20nd%20Git%20Upl/summarized-app/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n     \n      className=\"toaster group\"\n      \n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,8OAAC,wIAAA,CAAA,UAAM;QACL,OAAO;QAEP,WAAU;QAEV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}}]
}